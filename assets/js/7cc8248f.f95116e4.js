"use strict";(self.webpackChunkcxx_graph_docs=self.webpackChunkcxx_graph_docs||[]).push([[400],{8627:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>l,frontMatter:()=>i,metadata:()=>h,toc:()=>o});var r=n(4848),a=n(8453);const i={id:"how-to-make-a-graph",title:"Making a Graph",tags:["introduction","how-to","getting started"]},d=void 0,h={id:"getting-started/how-to-make-a-graph",title:"Making a Graph",description:"Requirements",source:"@site/docs/getting-started/how-to-make-a-graph.md",sourceDirName:"getting-started",slug:"/getting-started/how-to-make-a-graph",permalink:"/CXXGraph/getting-started/how-to-make-a-graph",draft:!1,unlisted:!1,editUrl:"https://github.com/ZigRazor/CXXGraph/docs/getting-started/how-to-make-a-graph.md",tags:[{label:"introduction",permalink:"/CXXGraph/tags/introduction"},{label:"how-to",permalink:"/CXXGraph/tags/how-to"},{label:"getting started",permalink:"/CXXGraph/tags/getting-started"}],version:"current",frontMatter:{id:"how-to-make-a-graph",title:"Making a Graph",tags:["introduction","how-to","getting started"]},sidebar:"docSidebar",previous:{title:"Installing and Uninstalling",permalink:"/CXXGraph/getting-started/installation"},next:{title:"Packaging",permalink:"/CXXGraph/getting-started/packaging"}},s={},o=[{value:"Requirements",id:"requirements",level:3},{value:"Creating the Graph",id:"creating-the-graph",level:2},{value:"Adding Nodes and Edges",id:"adding-nodes-and-edges",level:3},{value:"Manipulating the Graph Object",id:"manipulating-the-graph-object",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h3,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"C++17 or later"}),"\n",(0,r.jsx)(t.li,{children:"GCC compiler v7.3.0 OR MSVC compiler supporting C++17 or later"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"creating-the-graph",children:"Creating the Graph"}),"\n",(0,r.jsx)(t.p,{children:"At the heart of CXXGraph is the graph object. The graph object contains the nodes and edges to be worked upon."}),"\n",(0,r.jsx)(t.p,{children:"Syntax for creating the graph object:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Graph<int> myGraph; \n"})}),"\n",(0,r.jsxs)(t.p,{children:["Whether a graph is directed or undirected is controlled by the edges added, ",(0,r.jsx)(t.em,{children:"not the graph object itself."})]}),"\n",(0,r.jsx)(t.h3,{id:"adding-nodes-and-edges",children:"Adding Nodes and Edges"}),"\n",(0,r.jsx)(t.p,{children:"To begin using the graph, we require nodes to create edges between. Nodes are created individually."}),"\n",(0,r.jsx)(t.p,{children:"Here we create two nodes..."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'CXXGraph::Node<int> node1("1", 1);\nCXXGraph::Node<int> node2("2", 2);\n'})}),"\n",(0,r.jsx)(t.p,{children:"...and then pair them together."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"std::pair<const CXXGraph::Node<int> *, const CXXGraph::Node<int> *> pairNode(\n      &node1, &node2);\n"})}),"\n",(0,r.jsx)(t.p,{children:"These nodes are ready to have an edge created between them."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Undirected"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"CXXGraph::UndirectedEdge<int> edge(1, pairNode);\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Directed"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"CXXGraph::DirectedEdge<int> edge(1, pairNode);\n"})}),"\n",(0,r.jsxs)(t.p,{children:["With the edge created, add the edge to the graph object with the ",(0,r.jsx)(t.code,{children:"addEdge"})," function."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"myGraph.addEdge(edge);\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.em,{children:"The graph type is determined by the edges added to it."})}),"\n",(0,r.jsxs)(t.p,{children:["To explore the full possibilities of CXXGraph, you can find a rundown of every CXXGraph class, function, and object ",(0,r.jsx)(t.a,{href:"https://rawcdn.githack.com/ZigRazor/CXXGraph/master/docs/html/annotated.html",children:"here"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"manipulating-the-graph-object",children:"Manipulating the Graph Object"}),"\n",(0,r.jsx)(t.p,{children:"CXXGraph comes packed with many useful algorithms for your graphs. To use an algorithm, simply apply it to the graph object."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Traversal Algorithm"})}),"\n",(0,r.jsx)(t.p,{children:"The staple Depth First Search can be added to a graph like so:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"auto res = myGraph.depth_first_search(node1, node2);\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Advanced Algorithm"})}),"\n",(0,r.jsx)(t.p,{children:"Adding a more targeted algorithim is done the same way:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"auto res = myGraph.dijkstra(node1, node3);\n"})}),"\n",(0,r.jsx)(t.p,{children:"For a Minimum Spanning Tree algorithim such as Kruskal's, simply ensure the right args are sent to the graph function. In this case, none, as Kruskal's traverses the entire graph."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"auto mst = myGraph.kruskal();\n"})}),"\n",(0,r.jsxs)(t.p,{children:["A full selection of CXXGraph's Algorithms are available ",(0,r.jsx)(t.a,{href:"https://zigrazor.github.io/CXXGraph/component-explanation/regular-algorithm",children:"here"}),"."]})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>h});var r=n(6540);const a={},i=r.createContext(a);function d(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function h(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);