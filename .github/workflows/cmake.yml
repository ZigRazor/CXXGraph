name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # Define the operating systems you want to run the job on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
  

    steps:
    #- name: Install gtest manually
    #  run: sudo apt-get install libgtest-dev
      
    #- name: Install benchmark manually
    #  run: |
    #      git clone https://github.com/google/benchmark.git
    #      git clone https://github.com/google/googletest.git benchmark/googletest
    #      cd benchmark
    #      cmake -E make_directory "build"
    #      cmake -E chdir "build" cmake -DCMAKE_BUILD_TYPE=Release ../
    #      cmake --build "build" --config Release
    #      sudo cmake --build "build" --config Release --target install

    - uses: actions/checkout@v4

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        if [ ${{ matrix.os }} == 'windows-latest' ]; then
          cmake -DTEST=ON -Dgtest_disable_pthreads=ON -B ${{github.workspace}}/build
        else
          cmake -DTEST=ON -B ${{github.workspace}}/build
        fi;
      shell: bash


    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build

    - name: Test
      working-directory: ${{github.workspace}}/build/test
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C

